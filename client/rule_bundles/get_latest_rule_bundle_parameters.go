// Code generated by go-swagger; DO NOT EDIT.

package rule_bundles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetLatestRuleBundleParams creates a new GetLatestRuleBundleParams object
// with the default values initialized.
func NewGetLatestRuleBundleParams() *GetLatestRuleBundleParams {
	var ()
	return &GetLatestRuleBundleParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLatestRuleBundleParamsWithTimeout creates a new GetLatestRuleBundleParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLatestRuleBundleParamsWithTimeout(timeout time.Duration) *GetLatestRuleBundleParams {
	var ()
	return &GetLatestRuleBundleParams{

		timeout: timeout,
	}
}

// NewGetLatestRuleBundleParamsWithContext creates a new GetLatestRuleBundleParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLatestRuleBundleParamsWithContext(ctx context.Context) *GetLatestRuleBundleParams {
	var ()
	return &GetLatestRuleBundleParams{

		Context: ctx,
	}
}

// NewGetLatestRuleBundleParamsWithHTTPClient creates a new GetLatestRuleBundleParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLatestRuleBundleParamsWithHTTPClient(client *http.Client) *GetLatestRuleBundleParams {
	var ()
	return &GetLatestRuleBundleParams{
		HTTPClient: client,
	}
}

/*GetLatestRuleBundleParams contains all the parameters to send to the API endpoint
for the get latest rule bundle operation typically these are written to a http.Request
*/
type GetLatestRuleBundleParams struct {

	/*IfNoneMatch
	  SHA1 of the currently downloaded rule bundle.

	*/
	IfNoneMatch *string
	/*RegulaVersion
	  Client regula version.

	*/
	RegulaVersion string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) WithTimeout(timeout time.Duration) *GetLatestRuleBundleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) WithContext(ctx context.Context) *GetLatestRuleBundleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) WithHTTPClient(client *http.Client) *GetLatestRuleBundleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfNoneMatch adds the ifNoneMatch to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) WithIfNoneMatch(ifNoneMatch *string) *GetLatestRuleBundleParams {
	o.SetIfNoneMatch(ifNoneMatch)
	return o
}

// SetIfNoneMatch adds the ifNoneMatch to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) SetIfNoneMatch(ifNoneMatch *string) {
	o.IfNoneMatch = ifNoneMatch
}

// WithRegulaVersion adds the regulaVersion to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) WithRegulaVersion(regulaVersion string) *GetLatestRuleBundleParams {
	o.SetRegulaVersion(regulaVersion)
	return o
}

// SetRegulaVersion adds the regulaVersion to the get latest rule bundle params
func (o *GetLatestRuleBundleParams) SetRegulaVersion(regulaVersion string) {
	o.RegulaVersion = regulaVersion
}

// WriteToRequest writes these params to a swagger request
func (o *GetLatestRuleBundleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfNoneMatch != nil {

		// header param If-None-Match
		if err := r.SetHeaderParam("If-None-Match", *o.IfNoneMatch); err != nil {
			return err
		}

	}

	// query param regula_version
	qrRegulaVersion := o.RegulaVersion
	qRegulaVersion := qrRegulaVersion
	if qRegulaVersion != "" {
		if err := r.SetQueryParam("regula_version", qRegulaVersion); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
