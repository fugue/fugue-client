// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ResourceSummary Summary of resources for a scan.
// swagger:model ResourceSummary
type ResourceSummary struct {

	// Number of compliant resources.
	Compliant int64 `json:"compliant"`

	// Compliance summary for the compliance families run against resources for the scan.
	Families []*ResourceSummaryFamiliesItems0 `json:"families"`

	// Number of noncompliant resources.
	Noncompliant int64 `json:"noncompliant"`

	// Number of resource types in the scan.
	ResourceTypes int64 `json:"resource_types"`

	// Number of compliance rules failed.
	RulesFailed int64 `json:"rules_failed"`

	// Number of compliance rules passed.
	RulesPassed int64 `json:"rules_passed"`

	// Total number of resources in the scan.
	Total int64 `json:"total"`
}

// Validate validates this resource summary
func (m *ResourceSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFamilies(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceSummary) validateFamilies(formats strfmt.Registry) error {

	if swag.IsZero(m.Families) { // not required
		return nil
	}

	for i := 0; i < len(m.Families); i++ {
		if swag.IsZero(m.Families[i]) { // not required
			continue
		}

		if m.Families[i] != nil {
			if err := m.Families[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("families" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResourceSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceSummary) UnmarshalBinary(b []byte) error {
	var res ResourceSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ResourceSummaryFamiliesItems0 Compliance summary for the compliance family run against resources for the scan.
// swagger:model ResourceSummaryFamiliesItems0
type ResourceSummaryFamiliesItems0 struct {

	// Number of compliant resources in this family.
	Compliant int64 `json:"compliant"`

	// Name of the compliance family.
	Family string `json:"family"`

	// Number of noncompliant resources in this family.
	Noncompliant int64 `json:"noncompliant"`

	// Number of compliance rules failed in this family.
	RulesFailed int64 `json:"rules_failed"`

	// Number of compliance rules passed in this family.
	RulesPassed int64 `json:"rules_passed"`
}

// Validate validates this resource summary families items0
func (m *ResourceSummaryFamiliesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResourceSummaryFamiliesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceSummaryFamiliesItems0) UnmarshalBinary(b []byte) error {
	var res ResourceSummaryFamiliesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
